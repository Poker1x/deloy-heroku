/// <reference types="node" />
import { NowRequest, NowResponse } from '@vercel/node';
import { ServerResponse, Server, RequestListener } from 'http';
export declare class ApiError extends Error {
    readonly statusCode: number;
    constructor(statusCode: number, message: string);
}
export declare const enhanceRequest: (req: NowRequest) => Promise<NowRequest>;
export declare const enhanceResponse: (res: ServerResponse) => NowResponse;
export interface Config {
    disableHelpers?: boolean;
}
interface DefaultConfig {
    disableHelpers: false;
}
declare type NowRoute = (req: NowRequest, res: NowResponse) => void;
export declare const createServer: <C extends Config = DefaultConfig>(route: C extends undefined ? NowRoute : C["disableHelpers"] extends true ? RequestListener : NowRoute, config?: C | undefined) => Server;
export {};
